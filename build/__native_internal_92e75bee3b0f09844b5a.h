#ifndef MYPYC_NATIVE_INTERNAL_92e75bee3b0f09844b5a_H
#define MYPYC_NATIVE_INTERNAL_92e75bee3b0f09844b5a_H
#include <Python.h>
#include <CPy.h>
#include "__native_92e75bee3b0f09844b5a.h"

int CPyGlobalsInit(void);

extern PyObject *CPyStatics[402];
extern const char * const CPyLit_Str[];
extern const char * const CPyLit_Bytes[];
extern const char * const CPyLit_Int[];
extern const double CPyLit_Float[];
extern const double CPyLit_Complex[];
extern const int CPyLit_Tuple[];
extern const int CPyLit_FrozenSet[];
extern CPyModule *CPyModule_yearn_treasury___budget_internal;
extern CPyModule *CPyModule_yearn_treasury___budget;
extern PyObject *CPyStatic_budget___globals;
extern CPyModule *CPyModule_builtins;
extern CPyModule *CPyModule_yearn_treasury___budget____request_internal;
extern CPyModule *CPyModule_yearn_treasury___budget____request;
extern CPyModule *CPyModule_yearn_treasury___budget____requests_internal;
extern CPyModule *CPyModule_yearn_treasury___budget____requests;
extern PyObject *CPyStatic__request___globals;
extern CPyModule *CPyModule_dataclasses;
extern CPyModule *CPyModule_logging;
extern CPyModule *CPyModule_typing;
extern PyObject *CPyStatic__requests___globals;
extern CPyModule *CPyModule_os;
extern CPyModule *CPyModule_requests;
extern CPyModule *CPyModule_yearn_treasury___rules___cost_of_revenue___gas_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___cost_of_revenue___gas;
extern PyObject *CPyStatic_gas___globals;
extern CPyModule *CPyModule_pony___orm;
extern CPyModule *CPyModule_dao_treasury___db;
extern CPyModule *CPyModule_dao_treasury___sorting;
extern CPyModule *CPyModule_eth_typing;
extern CPyModule *CPyModule_y;
extern CPyModule *CPyModule_y___constants;
extern CPyModule *CPyModule_yearn_treasury___rules___expense_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___expense;
extern PyObject *CPyStatic_expense___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___general_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___general;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___infrastructure_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___infrastructure;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___people_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___people;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___security_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___security;
extern PyObject *CPyStatic_general___globals;
extern CPyModule *CPyModule_decimal;
extern CPyModule *CPyModule_dao_treasury;
extern PyObject *CPyStatic_infrastructure___globals;
extern PyObject *CPyStatic_people___globals;
extern PyObject *CPyStatic_security___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___other_income_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___other_income;
extern PyObject *CPyStatic_other_income___globals;
extern CPyModule *CPyModule_brownie;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___bribes_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___bribes;
extern PyObject *CPyStatic_bribes___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___keepcoins_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___keepcoins;
extern PyObject *CPyStatic_keepcoins___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___seasolver_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___seasolver;
extern PyObject *CPyStatic_seasolver___globals;
extern CPyModule *CPyModule_yearn_treasury____ens_internal;
extern CPyModule *CPyModule_yearn_treasury____ens;
extern PyObject *CPyStatic__ens___globals;
extern CPyModule *CPyModule_web3____utils___abi;
extern CPyModule *CPyModule_web3____utils___events;
extern CPyModule *CPyModule_yearn_treasury___vaults_internal;
extern CPyModule *CPyModule_yearn_treasury___vaults;
extern PyObject *CPyStatic_vaults___globals;
extern char CPyDef_budget_____top_level__(void);
extern PyObject *CPyStatic__request___logger;
extern PyTypeObject *CPyType__request___BudgetRequest;
extern PyObject *CPyDef__request___BudgetRequest(PyObject *cpy_r_args, PyObject *cpy_r_kwargs);
extern char CPyDef__request___BudgetRequest___is_approved(PyObject *cpy_r_self);
extern PyObject *CPyPy__request___BudgetRequest___is_approved(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__request___BudgetRequest___is_rejected(PyObject *cpy_r_self);
extern PyObject *CPyPy__request___BudgetRequest___is_rejected(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__request___BudgetRequest___is_stream(PyObject *cpy_r_self);
extern PyObject *CPyPy__request___BudgetRequest___is_stream(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__request___BudgetRequest___is_vesting(PyObject *cpy_r_self);
extern PyObject *CPyPy__request___BudgetRequest___is_vesting(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__request___BudgetRequest___is_paid(PyObject *cpy_r_self);
extern PyObject *CPyPy__request___BudgetRequest___is_paid(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__request_____top_level__(void);
extern PyObject *CPyStatic__requests____TOKEN;
extern PyObject *CPyStatic__requests____HEADERS;
extern PyObject *CPyDef__requests___fetch_brs(void);
extern PyObject *CPyPy__requests___fetch_brs(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__requests_____top_level__(void);
extern PyObject *CPyStatic_gas___commit;
extern PyObject *CPyStatic_gas____STRATEGIST_GAS_HASHES;
extern PyObject *CPyStatic_gas____RETURNED_GAS_HASHES;
extern char CPyDef_gas___is_strategist_gas(PyObject *cpy_r_tx);
extern PyObject *CPyPy_gas___is_strategist_gas(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_gas_____top_level__(void);
extern char CPyDef_expense_____top_level__(void);
extern char CPyDef_general___is_sms_discretionary_budget(PyObject *cpy_r_tx);
extern PyObject *CPyPy_general___is_sms_discretionary_budget(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_general_____top_level__(void);
extern PyObject *CPyStatic_infrastructure___infrastructure;
extern char CPyDef_infrastructure___is_tenderly(PyObject *cpy_r_tx);
extern PyObject *CPyPy_infrastructure___is_tenderly(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_infrastructure___is_wonderland(PyObject *cpy_r_tx);
extern PyObject *CPyPy_infrastructure___is_wonderland(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_infrastructure_____top_level__(void);
extern char CPyDef_people___is_coordinape(PyObject *cpy_r_tx);
extern PyObject *CPyPy_people___is_coordinape(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_people___is_ygift_grant(PyObject *cpy_r_tx);
extern PyObject *CPyPy_people___is_ygift_grant(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_people_____top_level__(void);
extern PyObject *CPyStatic_security___security;
extern PyObject *CPyStatic_security___audits;
extern char CPyDef_security___is_yacademy_audit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_yacademy_audit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security___is_chainsec_audit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_chainsec_audit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security___is_statemind_audit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_statemind_audit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security___is_mixbytes_audit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_mixbytes_audit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security___is_other_audit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_other_audit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security___is_bug_bounty(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_bug_bounty(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security___is_antispam_bot(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_antispam_bot(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security___is_warroom_help(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_warroom_help(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security_____top_level__(void);
extern PyObject *CPyStatic_other_income____POINT_ONE;
extern PyTypeObject *CPyType_other_income___is_robovault_share_env;
extern PyObject *CPyDef_other_income___is_robovault_share_env(void);
extern PyTypeObject *CPyType_other_income___is_robovault_share_gen;
extern PyObject *CPyDef_other_income___is_robovault_share_gen(void);
extern char CPyDef_other_income___is_atoken_yield(PyObject *cpy_r_tx);
extern PyObject *CPyPy_other_income___is_atoken_yield(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___is_robovault_share_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyPy_other_income___is_robovault_share_gen_____mypyc_generator_helper__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___is_robovault_share_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_other_income___is_robovault_share_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___is_robovault_share_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_other_income___is_robovault_share_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___is_robovault_share_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_other_income___is_robovault_share_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___is_robovault_share_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_other_income___is_robovault_share_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___is_robovault_share_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_other_income___is_robovault_share_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___is_robovault_share_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_other_income___is_robovault_share_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___is_robovault_share(PyObject *cpy_r_tx);
extern PyObject *CPyPy_other_income___is_robovault_share(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_other_income___is_cowswap_gas_reimbursement(PyObject *cpy_r_tx);
extern PyObject *CPyPy_other_income___is_cowswap_gas_reimbursement(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_other_income___is_usds_referral_code(PyObject *cpy_r_tx);
extern PyObject *CPyPy_other_income___is_usds_referral_code(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_other_income___is_yeth_application_fee(PyObject *cpy_r_tx);
extern PyObject *CPyPy_other_income___is_yeth_application_fee(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_other_income___is_yprisma_fees(PyObject *cpy_r_tx);
extern PyObject *CPyPy_other_income___is_yprisma_fees(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_other_income_____top_level__(void);
extern PyObject *CPyStatic_bribes___bribes;
extern char CPyDef_bribes___is_ycrv_bribe(PyObject *cpy_r_tx);
extern PyObject *CPyPy_bribes___is_ycrv_bribe(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_bribes___is_ybribe_fees(PyObject *cpy_r_tx);
extern PyObject *CPyPy_bribes___is_ybribe_fees(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_bribes_____top_level__(void);
extern PyObject *CPyStatic_keepcoins___keepcoins;
extern PyObject *CPyStatic_keepcoins___angle_strats_with_non_specific_names;
extern char CPyDef_keepcoins___is_keep_angle(PyObject *cpy_r_tx);
extern PyObject *CPyPy_keepcoins___is_keep_angle(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_keepcoins___is_keep_bal(PyObject *cpy_r_tx);
extern PyObject *CPyPy_keepcoins___is_keep_bal(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_keepcoins___is_keep_beets(PyObject *cpy_r_tx);
extern PyObject *CPyPy_keepcoins___is_keep_beets(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_keepcoins___is_keep_pool(PyObject *cpy_r_tx);
extern PyObject *CPyPy_keepcoins___is_keep_pool(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_keepcoins_____top_level__(void);
extern PyObject *CPyStatic_seasolver___seasolver;
extern char CPyDef_seasolver___is_seasolver_slippage_revenue(PyObject *cpy_r_tx);
extern PyObject *CPyPy_seasolver___is_seasolver_slippage_revenue(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_seasolver___is_cowswap_incentive(PyObject *cpy_r_tx);
extern PyObject *CPyPy_seasolver___is_cowswap_incentive(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_seasolver_____top_level__(void);
extern PyObject *CPyStatic__ens___resolver;
extern PyObject *CPyStatic__ens___topics;
extern char CPyDef__ens_____top_level__(void);
extern char CPyDef_vaults_____top_level__(void);
#endif
