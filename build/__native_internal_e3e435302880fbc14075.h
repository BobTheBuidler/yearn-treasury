#ifndef MYPYC_NATIVE_INTERNAL_e3e435302880fbc14075_H
#define MYPYC_NATIVE_INTERNAL_e3e435302880fbc14075_H
#include <Python.h>
#include <CPy.h>
#include "__native_e3e435302880fbc14075.h"

int CPyGlobalsInit(void);

extern PyObject *CPyStatics[820];
extern const char * const CPyLit_Str[];
extern const char * const CPyLit_Bytes[];
extern const char * const CPyLit_Int[];
extern const double CPyLit_Float[];
extern const double CPyLit_Complex[];
extern const int CPyLit_Tuple[];
extern const int CPyLit_FrozenSet[];
extern CPyModule *CPyModule_yearn_treasury___budget_internal;
extern CPyModule *CPyModule_yearn_treasury___budget;
extern PyObject *CPyStatic_budget___globals;
extern CPyModule *CPyModule_builtins;
extern CPyModule *CPyModule_yearn_treasury___budget____request_internal;
extern CPyModule *CPyModule_yearn_treasury___budget____request;
extern CPyModule *CPyModule_yearn_treasury___budget____requests_internal;
extern CPyModule *CPyModule_yearn_treasury___budget____requests;
extern PyObject *CPyStatic__request___globals;
extern CPyModule *CPyModule_dataclasses;
extern CPyModule *CPyModule_logging;
extern CPyModule *CPyModule_typing;
extern PyObject *CPyStatic__requests___globals;
extern CPyModule *CPyModule_os;
extern CPyModule *CPyModule_time;
extern CPyModule *CPyModule_requests;
extern CPyModule *CPyModule_yearn_treasury___rules___constants_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___constants;
extern PyObject *CPyStatic_constants___globals;
extern CPyModule *CPyModule_y;
extern CPyModule *CPyModule_y___constants;
extern CPyModule *CPyModule_yearn_treasury___rules___cost_of_revenue___gas_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___cost_of_revenue___gas;
extern PyObject *CPyStatic_gas___globals;
extern CPyModule *CPyModule_pony___orm;
extern CPyModule *CPyModule_dao_treasury;
extern CPyModule *CPyModule_eth_typing;
extern CPyModule *CPyModule_yearn_treasury___rules___expense_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___expense;
extern PyObject *CPyStatic_expense___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___general_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___general;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___infrastructure_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___infrastructure;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___people_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___people;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___security_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___expense___security;
extern PyObject *CPyStatic_expense___general___globals;
extern CPyModule *CPyModule_decimal;
extern PyObject *CPyStatic_infrastructure___globals;
extern PyObject *CPyStatic_people___globals;
extern PyObject *CPyStatic_security___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___conversion_factory_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___conversion_factory;
extern PyObject *CPyStatic_conversion_factory___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___gearbox_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___gearbox;
extern PyObject *CPyStatic_gearbox___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___iearn_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___iearn;
extern PyObject *CPyStatic_iearn___globals;
extern CPyModule *CPyModule_yearn_treasury___constants;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___otc_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___otc;
extern PyObject *CPyStatic_otc___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___pooltogether_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___pooltogether;
extern PyObject *CPyStatic_pooltogether___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___synthetix_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___synthetix;
extern PyObject *CPyStatic_synthetix___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___unwrapper_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___unwrapper;
extern PyObject *CPyStatic_unwrapper___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___vaults_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___vaults;
extern PyObject *CPyStatic_vaults___globals;
extern CPyModule *CPyModule_async_lru;
extern CPyModule *CPyModule_y___prices___yearn;
extern CPyModule *CPyModule_yearn_treasury___vaults;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___woofy_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___woofy;
extern PyObject *CPyStatic_woofy___globals;
extern CPyModule *CPyModule_brownie;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___yla_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___swaps___yla;
extern PyObject *CPyStatic_yla___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___general_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___general;
extern PyObject *CPyStatic_ignore___general___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___unit_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___unit;
extern PyObject *CPyStatic_unit___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___weth_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___weth;
extern PyObject *CPyStatic_weth___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___ygov_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___ignore___ygov;
extern PyObject *CPyStatic_ygov___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense;
extern PyObject *CPyStatic_other_expense___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense___boost_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense___boost;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense___bugs_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense___bugs;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense___donations_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense___donations;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense___dyfi_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense___dyfi;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense___events_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense___events;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense___misc_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense___misc;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense___revshare_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___other_expense___revshare;
extern PyObject *CPyStatic_boost___globals;
extern PyObject *CPyStatic_bugs___globals;
extern PyObject *CPyStatic_donations___globals;
extern PyObject *CPyStatic_dyfi___globals;
extern PyObject *CPyStatic_events___globals;
extern PyObject *CPyStatic_other_expense___misc___globals;
extern PyObject *CPyStatic_revshare___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___other_income_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___other_income;
extern PyObject *CPyStatic_other_income___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___other_income___airdrops_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___other_income___airdrops;
extern CPyModule *CPyModule_yearn_treasury___rules___other_income___misc_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___other_income___misc;
extern PyObject *CPyStatic_airdrops___globals;
extern PyObject *CPyStatic_other_income___misc___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___bribes_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___bribes;
extern PyObject *CPyStatic_bribes___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___farming_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___farming;
extern PyObject *CPyStatic_farming___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___keepcoins_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___keepcoins;
extern PyObject *CPyStatic_keepcoins___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___seasolver_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___seasolver;
extern PyObject *CPyStatic_seasolver___globals;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___yteams_internal;
extern CPyModule *CPyModule_yearn_treasury___rules___revenue___yteams;
extern PyObject *CPyStatic_yteams___globals;
extern CPyModule *CPyModule_yearn_treasury____db_internal;
extern CPyModule *CPyModule_yearn_treasury____db;
extern PyObject *CPyStatic__db___globals;
extern CPyModule *CPyModule_dao_treasury___db;
extern CPyModule *CPyModule_yearn_treasury;
extern CPyModule *CPyModule_yearn_treasury____ens_internal;
extern CPyModule *CPyModule_yearn_treasury____ens;
extern PyObject *CPyStatic__ens___globals;
extern CPyModule *CPyModule_web3____utils___abi;
extern CPyModule *CPyModule_web3____utils___events;
extern char CPyDef_budget_____top_level__(void);
extern PyObject *CPyStatic__request___logger;
extern PyTypeObject *CPyType__request___BudgetRequest;
extern PyObject *CPyDef__request___BudgetRequest(PyObject *cpy_r_args, PyObject *cpy_r_kwargs);
extern char CPyDef__request___BudgetRequest___is_approved(PyObject *cpy_r_self);
extern PyObject *CPyPy__request___BudgetRequest___is_approved(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__request___BudgetRequest___is_rejected(PyObject *cpy_r_self);
extern PyObject *CPyPy__request___BudgetRequest___is_rejected(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__request___BudgetRequest___is_stream(PyObject *cpy_r_self);
extern PyObject *CPyPy__request___BudgetRequest___is_stream(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__request___BudgetRequest___is_vesting(PyObject *cpy_r_self);
extern PyObject *CPyPy__request___BudgetRequest___is_vesting(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__request___BudgetRequest___is_paid(PyObject *cpy_r_self);
extern PyObject *CPyPy__request___BudgetRequest___is_paid(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__request_____top_level__(void);
extern PyObject *CPyStatic__requests____TOKEN;
extern PyObject *CPyStatic__requests____HEADERS;
extern PyObject *CPyStatic__requests___budget_requests;
extern PyObject *CPyStatic__requests___approved_requests;
extern PyObject *CPyStatic__requests___rejected_requests;
extern PyObject *CPyDef__requests___fetch_brs(void);
extern PyObject *CPyPy__requests___fetch_brs(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__requests____make_get_request(PyObject *cpy_r_params);
extern PyObject *CPyPy__requests____make_get_request(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__requests_____top_level__(void);
extern PyObject *CPyStatic_constants___YFI;
extern char CPyDef_constants_____top_level__(void);
extern PyObject *CPyStatic_gas___gas;
extern PyObject *CPyStatic_gas___commit;
extern PyObject *CPyStatic_gas____STRATEGIST_GAS_HASHES;
extern PyObject *CPyStatic_gas____RETURNED_GAS_HASHES;
extern char CPyDef_gas___is_strategist_gas(PyObject *cpy_r_tx);
extern PyObject *CPyPy_gas___is_strategist_gas(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_gas_____top_level__(void);
extern char CPyDef_expense_____top_level__(void);
extern char CPyDef_expense___general___is_sms_discretionary_budget(PyObject *cpy_r_tx);
extern PyObject *CPyPy_expense___general___is_sms_discretionary_budget(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_expense___general_____top_level__(void);
extern PyObject *CPyStatic_infrastructure___infrastructure;
extern char CPyDef_infrastructure___is_generic_infra(PyObject *cpy_r_tx);
extern PyObject *CPyPy_infrastructure___is_generic_infra(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_infrastructure_____top_level__(void);
extern PyObject *CPyStatic_people___grants;
extern PyObject *CPyStatic_people___website;
extern PyObject *CPyStatic_people___ux;
extern char CPyDef_people___is_coordinape(PyObject *cpy_r_tx);
extern PyObject *CPyPy_people___is_coordinape(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_people___is_ygift_grant(PyObject *cpy_r_tx);
extern PyObject *CPyPy_people___is_ygift_grant(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_people___is_yhaas_trinity_ii(PyObject *cpy_r_tx);
extern PyObject *CPyPy_people___is_yhaas_trinity_ii(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_people___is_gteam(PyObject *cpy_r_tx);
extern PyObject *CPyPy_people___is_gteam(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_people___is_rantom(PyObject *cpy_r_tx);
extern PyObject *CPyPy_people___is_rantom(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_people___is_worms(PyObject *cpy_r_tx);
extern PyObject *CPyPy_people___is_worms(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_people___is_simple_vesting_escrow(PyObject *cpy_r_tx);
extern PyObject *CPyPy_people___is_simple_vesting_escrow(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_people_____top_level__(void);
extern PyObject *CPyStatic_security___security;
extern PyObject *CPyStatic_security___audits;
extern PyObject *CPyStatic_security___grants;
extern char CPyDef_security___is_yacademy_audit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_yacademy_audit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security___is_chainsec_audit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_chainsec_audit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security___is_statemind_audit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_statemind_audit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security___is_mixbytes_audit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_mixbytes_audit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security___is_other_audit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_other_audit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security___is_bug_bounty(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_bug_bounty(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security___is_warroom_help(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_warroom_help(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security___is_ysecurity(PyObject *cpy_r_tx);
extern PyObject *CPyPy_security___is_ysecurity(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_security_____top_level__(void);
extern char CPyDef_conversion_factory___is_conversion_factory(PyObject *cpy_r_tx);
extern PyObject *CPyPy_conversion_factory___is_conversion_factory(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_conversion_factory_____top_level__(void);
extern char CPyDef_gearbox___is_gearbox_deposit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_gearbox___is_gearbox_deposit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_gearbox___is_gearbox_withdrawal(PyObject *cpy_r_tx);
extern PyObject *CPyPy_gearbox___is_gearbox_withdrawal(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_gearbox_____top_level__(void);
extern PyObject *CPyStatic_iearn___IEARN;
extern PyObject *CPyStatic_iearn___POOLS;
extern PyObject *CPyStatic_iearn___POOL_TO_UNDERLYING;
extern char CPyDef_iearn___is_iearn_withdrawal(PyObject *cpy_r_tx);
extern PyObject *CPyPy_iearn___is_iearn_withdrawal(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_iearn_____top_level__(void);
extern PyObject *CPyStatic_otc____OTC_SWAPS;
extern char CPyDef_otc___is_otc_swap(PyObject *cpy_r_tx);
extern PyObject *CPyPy_otc___is_otc_swap(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_otc_____top_level__(void);
extern char CPyDef_pooltogether___is_pooltogether_deposit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_pooltogether___is_pooltogether_deposit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_pooltogether_____top_level__(void);
extern char CPyDef_synthetix___is_synthetix_swap(PyObject *cpy_r_tx);
extern PyObject *CPyPy_synthetix___is_synthetix_swap(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_synthetix_____top_level__(void);
extern char CPyDef_unwrapper___is_unwrapper(PyObject *cpy_r_tx);
extern PyObject *CPyPy_unwrapper___is_unwrapper(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_unwrapper_____top_level__(void);
extern PyObject *CPyStatic_vaults___vaults;
extern PyObject *CPyStatic_vaults___TREASURY_AND_ZERO;
extern PyObject *CPyStatic_vaults___all_vaults;
extern tuple_T4OOOO CPyStatic_vaults____v3_deposit_keys;
extern PyTypeObject *CPyType_vaults___is_vault_deposit_gen;
extern PyObject *CPyDef_vaults___is_vault_deposit_gen(void);
extern PyTypeObject *CPyType_vaults___is_v1_or_v2_vault_deposit_gen;
extern PyObject *CPyDef_vaults___is_v1_or_v2_vault_deposit_gen(void);
extern PyTypeObject *CPyType_vaults____get_underlying_gen;
extern PyObject *CPyDef_vaults____get_underlying_gen(void);
extern PyTypeObject *CPyType_vaults___is_vault_withdrawal_gen;
extern PyObject *CPyDef_vaults___is_vault_withdrawal_gen(void);
extern PyObject *CPyDef_vaults___is_vault_deposit_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_vaults___is_vault_deposit_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults___is_vault_deposit_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_vault_deposit_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_vaults___is_vault_deposit_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_vault_deposit_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults___is_vault_deposit_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_vault_deposit_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_vaults___is_vault_deposit_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_vault_deposit_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults___is_vault_deposit_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_vault_deposit_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults___is_vault_deposit_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_vault_deposit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_vaults___is_vault_deposit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_v1_or_v2_vault_deposit_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_vaults___is_v1_or_v2_vault_deposit_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults___is_v1_or_v2_vault_deposit_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_v1_or_v2_vault_deposit_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_vaults___is_v1_or_v2_vault_deposit_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_v1_or_v2_vault_deposit_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults___is_v1_or_v2_vault_deposit_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_v1_or_v2_vault_deposit_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_vaults___is_v1_or_v2_vault_deposit_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_v1_or_v2_vault_deposit_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults___is_v1_or_v2_vault_deposit_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_v1_or_v2_vault_deposit_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults___is_v1_or_v2_vault_deposit_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_v1_or_v2_vault_deposit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_vaults___is_v1_or_v2_vault_deposit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_vaults___is_v3_vault_deposit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_vaults___is_v3_vault_deposit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults____get_underlying_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_vaults____get_underlying_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults____get_underlying_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults____get_underlying_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_vaults____get_underlying_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults____get_underlying_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults____get_underlying_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults____get_underlying_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_vaults____get_underlying_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults____get_underlying_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults____get_underlying_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults____get_underlying_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults____get_underlying_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults____get_underlying(PyObject *cpy_r_vault);
extern PyObject *CPyPy_vaults____get_underlying(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_vault_withdrawal_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_vaults___is_vault_withdrawal_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults___is_vault_withdrawal_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_vault_withdrawal_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_vaults___is_vault_withdrawal_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_vault_withdrawal_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults___is_vault_withdrawal_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_vault_withdrawal_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_vaults___is_vault_withdrawal_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_vault_withdrawal_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults___is_vault_withdrawal_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_vault_withdrawal_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_vaults___is_vault_withdrawal_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_vaults___is_vault_withdrawal(PyObject *cpy_r_tx);
extern PyObject *CPyPy_vaults___is_vault_withdrawal(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_vaults___is_dolla_fed_withdrawal(PyObject *cpy_r_tx);
extern PyObject *CPyPy_vaults___is_dolla_fed_withdrawal(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_vaults___is_dola_frax_withdrawal(PyObject *cpy_r_tx);
extern PyObject *CPyPy_vaults___is_dola_frax_withdrawal(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_vaults_____top_level__(void);
extern PyObject *CPyStatic_woofy___YFI_SCALE;
extern PyObject *CPyStatic_woofy___WOOFY_SCALE;
extern char CPyDef_woofy___is_woofy(PyObject *cpy_r_tx);
extern PyObject *CPyPy_woofy___is_woofy(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_woofy_____top_level__(void);
extern PyObject *CPyStatic_yla___yla;
extern char CPyDef_yla___is_yla_deposit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_yla___is_yla_deposit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_yla___is_yla_withdrawal(PyObject *cpy_r_tx);
extern PyObject *CPyPy_yla___is_yla_withdrawal(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_yla_____top_level__(void);
extern char CPyDef_ignore___general___is_returned_fundus(PyObject *cpy_r_tx);
extern PyObject *CPyPy_ignore___general___is_returned_fundus(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_ignore___general_____top_level__(void);
extern PyObject *CPyStatic_unit___unit;
extern PyObject *CPyStatic_unit___collateral;
extern PyObject *CPyStatic_unit___usdp;
extern char CPyDef_unit___is_unit_yfi_deposit(PyObject *cpy_r_tx);
extern PyObject *CPyPy_unit___is_unit_yfi_deposit(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_unit___is_unit_yfi_withdrawal(PyObject *cpy_r_tx);
extern PyObject *CPyPy_unit___is_unit_yfi_withdrawal(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_unit___is_minting_usdp(PyObject *cpy_r_tx);
extern PyObject *CPyPy_unit___is_minting_usdp(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_unit___is_burning_usdp(PyObject *cpy_r_tx);
extern PyObject *CPyPy_unit___is_burning_usdp(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_unit_____top_level__(void);
extern PyObject *CPyStatic_weth___weth;
extern char CPyDef_weth___is_weth_mint(PyObject *cpy_r_tx);
extern PyObject *CPyPy_weth___is_weth_mint(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_weth___is_weth(PyObject *cpy_r_tx);
extern PyObject *CPyPy_weth___is_weth(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_weth_____top_level__(void);
extern char CPyDef_ygov___is_sent_to_ygov(PyObject *cpy_r_tx);
extern PyObject *CPyPy_ygov___is_sent_to_ygov(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_ygov_____top_level__(void);
extern char CPyDef_other_expense_____top_level__(void);
extern char CPyDef_boost___is_buying_crv_for_boost(PyObject *cpy_r_tx);
extern PyObject *CPyPy_boost___is_buying_crv_for_boost(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_boost_____top_level__(void);
extern char CPyDef_bugs___is_double_fee_reimbursement(PyObject *cpy_r_tx);
extern PyObject *CPyPy_bugs___is_double_fee_reimbursement(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_bugs___is_yyfi_fee_reimbursement(PyObject *cpy_r_tx);
extern PyObject *CPyPy_bugs___is_yyfi_fee_reimbursement(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_bugs___is_lossy_fee_reimbursement(PyObject *cpy_r_tx);
extern PyObject *CPyPy_bugs___is_lossy_fee_reimbursement(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_bugs___is_stycrv(PyObject *cpy_r_tx);
extern PyObject *CPyPy_bugs___is_stycrv(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_bugs___is_slippage_bug_reimbursement(PyObject *cpy_r_tx);
extern PyObject *CPyPy_bugs___is_slippage_bug_reimbursement(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_bugs___is_gusd_vault_bug_reimbursement(PyObject *cpy_r_tx);
extern PyObject *CPyPy_bugs___is_gusd_vault_bug_reimbursement(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_bugs___is_dai_vault_reimbursement(PyObject *cpy_r_tx);
extern PyObject *CPyPy_bugs___is_dai_vault_reimbursement(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_bugs_____top_level__(void);
extern PyObject *CPyStatic_donations___donations;
extern char CPyDef_donations___is_gitcoin_matching_donation(PyObject *cpy_r_tx);
extern PyObject *CPyPy_donations___is_gitcoin_matching_donation(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_donations___is_warroom_games(PyObject *cpy_r_tx);
extern PyObject *CPyPy_donations___is_warroom_games(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_donations_____top_level__(void);
extern PyObject *CPyStatic_dyfi___dyfi;
extern char CPyDef_dyfi___is_dyfi_launch(PyObject *cpy_r_tx);
extern PyObject *CPyPy_dyfi___is_dyfi_launch(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_dyfi___is_dyfi_redemptions(PyObject *cpy_r_tx);
extern PyObject *CPyPy_dyfi___is_dyfi_redemptions(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_dyfi_____top_level__(void);
extern PyObject *CPyStatic_events___events;
extern char CPyDef_events___is_eth_denver(PyObject *cpy_r_tx);
extern PyObject *CPyPy_events___is_eth_denver(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_events_____top_level__(void);
extern char CPyDef_other_expense___misc___is_ybudget_reward(PyObject *cpy_r_tx);
extern PyObject *CPyPy_other_expense___misc___is_ybudget_reward(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_other_expense___misc___is_one_yfi_for_signers(PyObject *cpy_r_tx);
extern PyObject *CPyPy_other_expense___misc___is_one_yfi_for_signers(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_other_expense___misc_____top_level__(void);
extern PyObject *CPyStatic_revshare___revshare;
extern char CPyDef_revshare_____top_level__(void);
extern char CPyDef_other_income_____top_level__(void);
extern PyObject *CPyStatic_airdrops___airdrop;
extern tuple_T2OO CPyStatic_airdrops____SAFE_AIRDROP_CONTRACTS;
extern char CPyDef_airdrops___is_safe_airdrop(PyObject *cpy_r_tx);
extern PyObject *CPyPy_airdrops___is_safe_airdrop(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_airdrops___is_airdrop(PyObject *cpy_r_tx);
extern PyObject *CPyPy_airdrops___is_airdrop(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_airdrops_____top_level__(void);
extern PyObject *CPyStatic_other_income___misc____POINT_ONE;
extern PyTypeObject *CPyType_other_income___misc___is_robovault_share_gen;
extern PyObject *CPyDef_other_income___misc___is_robovault_share_gen(void);
extern char CPyDef_other_income___misc___is_atoken_yield(PyObject *cpy_r_tx);
extern PyObject *CPyPy_other_income___misc___is_atoken_yield(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___misc___is_robovault_share_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_other_income___misc___is_robovault_share_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_other_income___misc___is_robovault_share_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___misc___is_robovault_share_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_other_income___misc___is_robovault_share_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___misc___is_robovault_share_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_other_income___misc___is_robovault_share_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___misc___is_robovault_share_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_other_income___misc___is_robovault_share_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___misc___is_robovault_share_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_other_income___misc___is_robovault_share_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___misc___is_robovault_share_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_other_income___misc___is_robovault_share_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_other_income___misc___is_robovault_share(PyObject *cpy_r_tx);
extern PyObject *CPyPy_other_income___misc___is_robovault_share(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_other_income___misc___is_cowswap_gas_reimbursement(PyObject *cpy_r_tx);
extern PyObject *CPyPy_other_income___misc___is_cowswap_gas_reimbursement(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_other_income___misc___is_usds_referral_code(PyObject *cpy_r_tx);
extern PyObject *CPyPy_other_income___misc___is_usds_referral_code(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_other_income___misc___is_yeth_application_fee(PyObject *cpy_r_tx);
extern PyObject *CPyPy_other_income___misc___is_yeth_application_fee(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_other_income___misc___is_yprisma_fees(PyObject *cpy_r_tx);
extern PyObject *CPyPy_other_income___misc___is_yprisma_fees(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_other_income___misc_____top_level__(void);
extern PyObject *CPyStatic_bribes___bribes;
extern char CPyDef_bribes___is_ycrv_bribe(PyObject *cpy_r_tx);
extern PyObject *CPyPy_bribes___is_ycrv_bribe(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_bribes___is_ybribe_fees(PyObject *cpy_r_tx);
extern PyObject *CPyPy_bribes___is_ybribe_fees(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_bribes_____top_level__(void);
extern PyObject *CPyStatic_farming___farming;
extern PyTypeObject *CPyType_farming___is_comp_rewards_gen;
extern PyObject *CPyDef_farming___is_comp_rewards_gen(void);
extern PyTypeObject *CPyType_farming___is_scream_rewards_gen;
extern PyObject *CPyDef_farming___is_scream_rewards_gen(void);
extern PyTypeObject *CPyType_farming____is_generic_comp_rewards_gen;
extern PyObject *CPyDef_farming____is_generic_comp_rewards_gen(void);
extern PyObject *CPyDef_farming___is_comp_rewards_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_farming___is_comp_rewards_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_farming___is_comp_rewards_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming___is_comp_rewards_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_farming___is_comp_rewards_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming___is_comp_rewards_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_farming___is_comp_rewards_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming___is_comp_rewards_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_farming___is_comp_rewards_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming___is_comp_rewards_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_farming___is_comp_rewards_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming___is_comp_rewards_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_farming___is_comp_rewards_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming___is_comp_rewards(PyObject *cpy_r_tx);
extern PyObject *CPyPy_farming___is_comp_rewards(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming___is_scream_rewards_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_farming___is_scream_rewards_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_farming___is_scream_rewards_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming___is_scream_rewards_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_farming___is_scream_rewards_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming___is_scream_rewards_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_farming___is_scream_rewards_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming___is_scream_rewards_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_farming___is_scream_rewards_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming___is_scream_rewards_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_farming___is_scream_rewards_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming___is_scream_rewards_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_farming___is_scream_rewards_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming___is_scream_rewards(PyObject *cpy_r_tx);
extern PyObject *CPyPy_farming___is_scream_rewards(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_farming___is_sex(PyObject *cpy_r_tx);
extern PyObject *CPyPy_farming___is_sex(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_farming___is_solid(PyObject *cpy_r_tx);
extern PyObject *CPyPy_farming___is_solid(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_farming___is_solidsex(PyObject *cpy_r_tx);
extern PyObject *CPyPy_farming___is_solidsex(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming____is_generic_comp_rewards_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyDef_farming____is_generic_comp_rewards_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_farming____is_generic_comp_rewards_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming____is_generic_comp_rewards_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_farming____is_generic_comp_rewards_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming____is_generic_comp_rewards_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_farming____is_generic_comp_rewards_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming____is_generic_comp_rewards_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_farming____is_generic_comp_rewards_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming____is_generic_comp_rewards_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_farming____is_generic_comp_rewards_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming____is_generic_comp_rewards_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_farming____is_generic_comp_rewards_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_farming____is_generic_comp_rewards(PyObject *cpy_r_tx);
extern PyObject *CPyPy_farming____is_generic_comp_rewards(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_farming_____top_level__(void);
extern PyObject *CPyStatic_keepcoins___keepcoins;
extern PyObject *CPyStatic_keepcoins___angle_strats_with_non_specific_names;
extern char CPyDef_keepcoins___is_keep_angle(PyObject *cpy_r_tx);
extern PyObject *CPyPy_keepcoins___is_keep_angle(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_keepcoins___is_keep_bal(PyObject *cpy_r_tx);
extern PyObject *CPyPy_keepcoins___is_keep_bal(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_keepcoins___is_keep_beets(PyObject *cpy_r_tx);
extern PyObject *CPyPy_keepcoins___is_keep_beets(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_keepcoins___is_keep_pool(PyObject *cpy_r_tx);
extern PyObject *CPyPy_keepcoins___is_keep_pool(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_keepcoins_____top_level__(void);
extern PyObject *CPyStatic_seasolver___seasolver;
extern char CPyDef_seasolver___is_seasolver_slippage_revenue(PyObject *cpy_r_tx);
extern PyObject *CPyPy_seasolver___is_seasolver_slippage_revenue(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_seasolver___is_cowswap_incentive(PyObject *cpy_r_tx);
extern PyObject *CPyPy_seasolver___is_cowswap_incentive(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_seasolver_____top_level__(void);
extern char CPyDef_yteams___is_yteam_rev_share(PyObject *cpy_r_tx);
extern PyObject *CPyPy_yteams___is_yteam_rev_share(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_yteams_____top_level__(void);
extern char CPyDef__db___prepare_db(void);
extern PyObject *CPyPy__db___prepare_db(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__db_____top_level__(void);
extern PyObject *CPyStatic__ens___resolver;
extern PyObject *CPyStatic__ens___topics;
extern char CPyDef__ens_____top_level__(void);
#endif
